[{"/home/tlspc-asus/Desktop/TASK/crud/src/index.jsx":"1","/home/tlspc-asus/Desktop/TASK/crud/src/App.jsx":"2","/home/tlspc-asus/Desktop/TASK/crud/src/_main/routeConstants.js":"3","/home/tlspc-asus/Desktop/TASK/crud/src/_main/constants.js":"4","/home/tlspc-asus/Desktop/TASK/crud/src/_main/errorConstants.js":"5","/home/tlspc-asus/Desktop/TASK/crud/src/Biodata/View.js":"6","/home/tlspc-asus/Desktop/TASK/crud/src/Biodata/index.jsx":"7","/home/tlspc-asus/Desktop/TASK/crud/src/Biodata/ViewCard.js":"8","/home/tlspc-asus/Desktop/TASK/crud/src/LandingPage/index.jsx":"9","/home/tlspc-asus/Desktop/TASK/crud/src/LandingPage/Header.js":"10","/home/tlspc-asus/Desktop/TASK/crud/src/LandingPage/Footer.js":"11","/home/tlspc-asus/Desktop/TASK/crud/src/LandingPage/Layout.js":"12"},{"size":313,"mtime":1667368856000,"results":"13","hashOfConfig":"14"},{"size":547,"mtime":1667483596651,"results":"15","hashOfConfig":"14"},{"size":116,"mtime":1667470717778,"results":"16","hashOfConfig":"14"},{"size":587,"mtime":1667369170000,"results":"17","hashOfConfig":"14"},{"size":587,"mtime":1667315302000,"results":"18","hashOfConfig":"14"},{"size":416,"mtime":1667485280582,"results":"19","hashOfConfig":"14"},{"size":16092,"mtime":1667486520384,"results":"20","hashOfConfig":"14"},{"size":2606,"mtime":1667483608131,"results":"21","hashOfConfig":"14"},{"size":332,"mtime":1667483207055,"results":"22","hashOfConfig":"14"},{"size":1774,"mtime":1667555435514,"results":"23","hashOfConfig":"14"},{"size":1219,"mtime":1667550746232,"results":"24","hashOfConfig":"14"},{"size":4154,"mtime":1667477477291,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"vo705a",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/home/tlspc-asus/Desktop/TASK/crud/src/index.jsx",[],[],[],"/home/tlspc-asus/Desktop/TASK/crud/src/App.jsx",[],[],"/home/tlspc-asus/Desktop/TASK/crud/src/_main/routeConstants.js",[],[],"/home/tlspc-asus/Desktop/TASK/crud/src/_main/constants.js",["66","67","68"],[],"\r\n\r\nexport const baseURL = \"http://54.202.218.249:9501/api/users\";\r\n\r\n//REGEX\r\nexport const EMAIL_REGEX = '/^([a-zA-Z0-9_.\\-+])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/';\r\nexport const NOT_EMPTY_REGEX = '^(?!\\\\s*$).+';\r\nexport const ALPHA_REGEX = '/[^a-z0-9]/gi,';\r\nexport const PASSWORD_REGEX = '/^(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[a-zA-Z!#$%&? \"])[a-zA-Z0-9!#$%&?]{8,20}$/';\r\nexport const PHONE_REGEX = \"^(\\\\+\\\\d{1,3}( )?)?((\\\\(\\\\d{1,3}\\\\))|\\\\d{1,3})[- .]?\\\\d{3,4}[- .]?\\\\d{4}$\"\r\n\r\n\r\n//Methods\r\n\r\nexport const POST = \"POST\"\r\nexport const GET = \"GET\"\r\nexport const UPDATE = \"UPDATE\"","/home/tlspc-asus/Desktop/TASK/crud/src/_main/errorConstants.js",[],[],"/home/tlspc-asus/Desktop/TASK/crud/src/Biodata/View.js",[],[],"/home/tlspc-asus/Desktop/TASK/crud/src/Biodata/index.jsx",["69","70","71","72"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport classes from \"./Validate.module.css\";\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../_main/constants\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconsole.log(\"baseURL\", baseURL);\r\n\r\nconst  BioData =()=> {\r\n  const [post, setPost] = useState(\"\");\r\n  const [update, setUpdate] = useState(\"\");\r\n  const [Values, setValues] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    address1: \"\",\r\n    address2: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zipCode: \"\",\r\n    country: \"\",\r\n    qualification: \"\",\r\n    comments: \"\",\r\n  });\r\n \r\n\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    const option = {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    axios.post(baseURL, { option }).then((response) => {\r\n      console.log(\"responsePOST\", response);\r\n      alert(\" successfully created\");\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(baseURL).then((response) => {\r\n      console.log(\"response\", response);\r\n      setPost(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const Handledelete = (id) => {\r\n    alert(\"delete_id\", id);\r\n    axios.delete(`${baseURL}/${id}`).then((response) => {\r\n      console.log(\"response\", response.data);\r\n    });\r\n    window.location.reload();\r\n  };\r\n\r\n  //  const HandleView = (id) => {\r\n  //    axios.get(`${baseURL}/${id}`).then((response) => {\r\n  //    });\r\n  //  }\r\n  const HandleUpdate = (id) => {\r\n    console.log('edit_id', id)\r\n\r\n    axios.get(`${baseURL}/${id}`).then((response) => {\r\n      console.log(\"response\", response.data);\r\n      setUpdate(response.data)\r\n      \r\n      const {\r\n        _id,\r\n        zipCode,\r\n        state,\r\n        qualification,\r\n        lastName,\r\n        firstName,\r\n        email,\r\n        country,\r\n        comments,\r\n        city,\r\n      } = response.data;\r\n      setValues({\r\n        zipCode,\r\n        state,\r\n        qualification,\r\n        lastName,\r\n        firstName,\r\n        email,\r\n        country,\r\n        comments,\r\n        city,\r\n      });\r\n    });\r\n    const {\r\n      _id,\r\n      zipCode,\r\n      state,\r\n      qualification,\r\n      lastName,\r\n      firstName,\r\n      email,\r\n      country,\r\n      comments,\r\n      city,\r\n    } = update;\r\n\r\n    const request = {\r\n      _id,\r\n      zipCode,\r\n      state,\r\n      qualification,\r\n      lastName,\r\n      firstName,\r\n      email,\r\n      country,\r\n      comments,\r\n      city,\r\n    };\r\n    setPost(request);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Card\">\r\n    <div className=\"form-Container\">\r\n      <div className=\"form-Content\">\r\n        <div className=\"main-Container\">\r\n          <div className=\"first-Container\">\r\n            <legend className=\"text-center\">BioData</legend>\r\n\r\n            <div >\r\n              <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <fieldset>\r\n                  <div className=\"mb-3\">\r\n                    <div style={{ display: \"flex\" }}>\r\n                      <div class=\"row\">\r\n                        <label\r\n                          className={classes.formlables}\r\n                          htmlFor=\"firstName\"\r\n                        >\r\n                          First Name\r\n                        </label>\r\n\r\n                        <Form.Field className=\"col-12\">\r\n                          <input\r\n                            maxLength={10}\r\n                            placeholder=\"First Name\"\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            {...register(\"firstName\", { required: true })}\r\n                          />\r\n                        </Form.Field>\r\n                        {errors.firstName && (\r\n                          <p className={classes.error}>First Name Required</p>\r\n                        )}\r\n                      </div>\r\n                      <div class=\"row\" style={{ marginLeft: \"1rem\" }}>\r\n                        <label\r\n                          className={classes.formlables}\r\n                          htmlFor=\"firstName\"\r\n                        >\r\n                          Last Name\r\n                        </label>\r\n\r\n                        <Form.Field className=\"col-12\">\r\n                          <input\r\n                            maxLength={10}\r\n                            placeholder=\"Last Name\"\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            {...register(\"lastName\", {\r\n                              required: true,\r\n                              maxLength: 10,\r\n                            })}\r\n                          />\r\n                        </Form.Field>\r\n                        {errors.lastName && (\r\n                          <p className={classes.error}>Last Name Required</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <Form.Field>\r\n                      <label className={classes.formlables}>Email</label>\r\n                      <input\r\n                        maxLength={50}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Email\"\r\n                        type=\"email\"\r\n                        {...register(\"email\", {\r\n                          required: true,\r\n                          pattern:\r\n                            /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                        })}\r\n                      />\r\n                    </Form.Field>\r\n                    {errors.email && (\r\n                      <p className={classes.error}>Please check the Email</p>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <Form.Field>\r\n                      <label className={classes.formlables}>\r\n                        Mobile Number\r\n                      </label>\r\n                      <input\r\n                        maxLength={12}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Mobile Number\"\r\n                        type=\"number\"\r\n                        {...register(\"phoneNumber\", { required: true })}\r\n                      />\r\n                    </Form.Field>\r\n                    {errors.phoneNumber && (\r\n                      <p className={classes.error}>\r\n                        Please check the Mobile Number\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <Form.Field>\r\n                      <label className={classes.formlables}>Address</label>\r\n                      <textarea\r\n                        maxLength={200}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Address Line 1\"\r\n                        type=\"text\"\r\n                        {...register(\"address1\", { required: true })}\r\n                      />\r\n                      {errors.address2 && (\r\n                        <p className={classes.error}>Address Required</p>\r\n                      )}\r\n\r\n                      <div style={{ marginTop: \"0.5rem\" }}>\r\n                        <textarea\r\n                          className=\"form-control\"\r\n                          placeholder=\"Address Line 2\"\r\n                          type=\"text\"\r\n                          maxLength={200}\r\n                          {...register(\"address2\", { required: true })}\r\n                        />\r\n                      </div>\r\n                    </Form.Field>\r\n                    {/* {errors.address2 && <p className={classes.error}>Address Required</p>} */}\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <div style={{ display: \"flex\" }}>\r\n                      <div class=\"row\">\r\n                        <label\r\n                          className={classes.formlables}\r\n                          htmlFor=\"firstName\"\r\n                        >\r\n                          City\r\n                        </label>\r\n\r\n                        <Form.Field className=\"col-12\">\r\n                          <input\r\n                            maxLength={20}\r\n                            placeholder=\"City Name\"\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            {...register(\"city\", {\r\n                              required: true,\r\n                              maxLength: 10,\r\n                            })}\r\n                          />\r\n                        </Form.Field>\r\n                        {errors.city && (\r\n                          <p className={classes.error}>City Name Required</p>\r\n                        )}\r\n                      </div>\r\n                      <div class=\"row\" style={{ marginLeft: \"1rem\" }}>\r\n                        <label\r\n                          className={classes.formlables}\r\n                          htmlFor=\"firstName\"\r\n                        >\r\n                          State{\" \"}\r\n                        </label>\r\n\r\n                        <Form.Field className=\"col-12\">\r\n                          <input\r\n                            maxLength={20}\r\n                            placeholder=\"State Name\"\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            {...register(\"state\", {\r\n                              required: true,\r\n                              maxLength: 10,\r\n                            })}\r\n                          />\r\n                        </Form.Field>\r\n                        {errors.state && (\r\n                          <p className={classes.error}>State Name Required</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"mb-3\">\r\n                    <div style={{ display: \"flex\" }}>\r\n                      <div class=\"row\">\r\n                        <label className={classes.formlables} htmlFor=\"zipcode\">\r\n                          Zip Code\r\n                        </label>\r\n\r\n                        <Form.Field className=\"col-12\">\r\n                          <input\r\n                            maxLength={10}\r\n                            placeholder=\"Zip Code\"\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            {...register(\"zipcode\", { required: true })}\r\n                          />\r\n                        </Form.Field>\r\n                        {errors.zipcode && (\r\n                          <p className={classes.error}>Zipcode Required</p>\r\n                        )}\r\n                      </div>\r\n                      <div class=\"row\" style={{ marginLeft: \"1rem\" }}>\r\n                        <label\r\n                          className={classes.formlables}\r\n                          htmlFor=\"firstName\"\r\n                        >\r\n                          Country\r\n                        </label>\r\n                        <Form.Field className=\"col-12\">\r\n                          <input\r\n                            maxLength={20}\r\n                            placeholder=\"Country\"\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            {...register(\"country\", { required: true })}\r\n                          />\r\n                        </Form.Field>\r\n                        {errors.country && (\r\n                          <p className={classes.error}>Country Name Required</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <Form.Field>\r\n                    <label>Write your qualification</label>\r\n                    <textarea\r\n                      maxLength={200}\r\n                      className=\"form-control\"\r\n                      placeholder=\"Qualification\"\r\n                      type=\"text\"\r\n                      {...register(\"qualification\", { required: true })}\r\n                    />\r\n                  </Form.Field>\r\n                  {errors.qualification && (\r\n                    <p className={classes.error}>Qualification Required</p>\r\n                  )}\r\n                  <div className=\"mb-3\">\r\n                    <Form.Field>\r\n                      <label>Comment</label>\r\n                      <textarea\r\n                        maxLength={20}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Comment ...\"\r\n                        type=\"textarea\"\r\n                        {...register(\"comments\", { required: true })}\r\n                      />\r\n                    </Form.Field>\r\n                    {errors.comments && (\r\n                      <p className={classes.error}>Comments Required</p>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <div className=\"d-grid gap-2 col-12\">\r\n                      <Button\r\n                        className={classes.subbutton}\r\n                        variant=\"primary\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </fieldset>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"table-Container\"\r\n          style={{\r\n            backgroundColor: \"#f3f3f3\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <div>\r\n            <table className=\"table table-striped\" style={{ margin: \"1rem\" }}>\r\n              <thead className=\"\">\r\n                <tr className=\"bg-dark text-white\">\r\n                  <th>Name</th>\r\n                  <th>Email</th>\r\n                  <th>Phone</th>\r\n                  <th>Edit</th>\r\n                  <th>View</th>\r\n                  <th>Delete</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {post.length > 0 &&\r\n                  post.map((lists, index) => {\r\n                    let id = lists._id;\r\n                    // console.log('form_id',id)\r\n                    return (\r\n                      <tr key={id}>\r\n                        <td>{lists.firstName}</td>\r\n                        <td>{lists.email}</td>\r\n                        <td>{lists.phoneNumber}</td>\r\n                        <td>\r\n                          <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={() => HandleUpdate(id)}\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                      \r\n                          &nbsp;\r\n                        </td>\r\n                        <td>\r\n                          <Link to={`/view/${id}`} state={id}>\r\n                            <button className=\"btn btn-secondary\">View</button>\r\n                          </Link>\r\n                          &nbsp;\r\n                        </td>\r\n                        <td>\r\n                          <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => Handledelete(lists.id)}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BioData;\r\n","/home/tlspc-asus/Desktop/TASK/crud/src/Biodata/ViewCard.js",["73"],[],"import React,{useEffect, useState} from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../_main/constants\";\r\n\r\n\r\nconst ViewCard = (props) => {\r\n\r\n  const [view, setView] = useState(\"\");\r\n  console.log('view',view);\r\n\r\n  const id = props.id;\r\n  console.log('card_id', id)\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`${baseURL}/${id}`).then((response) => {\r\n      console.log(\"view_response\", response.data);\r\n      setView(response.data);\r\n    });\r\n  }, [])\r\n\r\n \r\n\r\n\r\n\r\n  return (\r\n    <div >\r\n        <div className=\"card-header\">\r\n          <h4> Users Biodata info</h4>\r\n        </div>\r\n        <div className=\"card-body \">\r\n          <table className=\"table table-dark text-white\">\r\n            <tbody>\r\n              <tr>\r\n                <td>FirstName</td>\r\n                <td>{view.firstName}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>LastName</td>\r\n                <td>{view.lastName}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>E-mail</td>\r\n                <td>{view.email}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>MobileNumber</td>\r\n                <td>{view.phoneNumber}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Address Line 1</td>\r\n                <td>{view.address1}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Address Line 2</td>\r\n                <td>{view.address2}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>City</td>\r\n                <td>{view.city}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>State</td>\r\n                <td>{view.state}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Zip-Code</td>\r\n                <td>{view.zipCode}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Country</td>\r\n                <td>{view.country}</td>\r\n              </tr><tr>\r\n                <td>Qualification</td>\r\n                <td>{view.qualification}</td>\r\n              </tr><tr>\r\n                <td>Comments</td>\r\n                <td>{view.comments}</td>\r\n              </tr>\r\n             \r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <Link className=\"\" to={`/`}>\r\n            <button className=\"btn btn-primary \">Back to Table</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nViewCard.propTypes = {\r\n  id: PropTypes.number,\r\n};\r\n\r\nexport default ViewCard;\r\n","/home/tlspc-asus/Desktop/TASK/crud/src/LandingPage/index.jsx",[],[],"/home/tlspc-asus/Desktop/TASK/crud/src/LandingPage/Header.js",[],["74","75","76","77"],"/home/tlspc-asus/Desktop/TASK/crud/src/LandingPage/Footer.js",["78","79","80","81"],[],"/home/tlspc-asus/Desktop/TASK/crud/src/LandingPage/Layout.js",[],[],{"ruleId":"82","severity":1,"message":"83","line":6,"column":44,"nodeType":"84","messageId":"85","endLine":6,"endColumn":45,"suggestions":"86"},{"ruleId":"82","severity":1,"message":"87","line":6,"column":67,"nodeType":"84","messageId":"85","endLine":6,"endColumn":68,"suggestions":"88"},{"ruleId":"82","severity":1,"message":"89","line":9,"column":39,"nodeType":"84","messageId":"85","endLine":9,"endColumn":40,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":18,"column":10,"nodeType":"93","messageId":"94","endLine":18,"endColumn":16},{"ruleId":"91","severity":1,"message":"95","line":80,"column":9,"nodeType":"93","messageId":"94","endLine":80,"endColumn":12},{"ruleId":"82","severity":1,"message":"96","line":202,"column":39,"nodeType":"84","messageId":"85","endLine":202,"endColumn":40,"suggestions":"97"},{"ruleId":"82","severity":1,"message":"96","line":202,"column":64,"nodeType":"84","messageId":"85","endLine":202,"endColumn":65,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":23,"column":6,"nodeType":"101","endLine":23,"endColumn":8,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":14,"column":9,"nodeType":"105","endLine":14,"endColumn":42,"suppressions":"106"},{"ruleId":"103","severity":1,"message":"104","line":31,"column":15,"nodeType":"105","endLine":31,"endColumn":44,"suppressions":"107"},{"ruleId":"103","severity":1,"message":"104","line":36,"column":15,"nodeType":"105","endLine":36,"endColumn":44,"suppressions":"108"},{"ruleId":"103","severity":1,"message":"104","line":41,"column":15,"nodeType":"105","endLine":41,"endColumn":44,"suppressions":"109"},{"ruleId":"103","severity":1,"message":"104","line":10,"column":17,"nodeType":"105","endLine":10,"endColumn":50},{"ruleId":"103","severity":1,"message":"104","line":16,"column":29,"nodeType":"105","endLine":16,"endColumn":58},{"ruleId":"103","severity":1,"message":"104","line":19,"column":29,"nodeType":"105","endLine":19,"endColumn":58},{"ruleId":"103","severity":1,"message":"104","line":23,"column":25,"nodeType":"105","endLine":23,"endColumn":54},"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["110","111"],"Unnecessary escape character: \\..",["112","113"],"Unnecessary escape character: \\d.",["114","115"],"no-unused-vars","'Values' is assigned a value but never used.","Identifier","unusedVar","'_id' is assigned a value but never used.","Unnecessary escape character: \\[.",["116","117"],["118","119"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["120"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["121"],["122"],["123"],["124"],{"messageId":"125","fix":"126","desc":"127"},{"messageId":"128","fix":"129","desc":"130"},{"messageId":"125","fix":"131","desc":"127"},{"messageId":"128","fix":"132","desc":"130"},{"messageId":"125","fix":"133","desc":"127"},{"messageId":"128","fix":"134","desc":"130"},{"messageId":"125","fix":"135","desc":"127"},{"messageId":"128","fix":"136","desc":"130"},{"messageId":"125","fix":"137","desc":"127"},{"messageId":"128","fix":"138","desc":"130"},{"desc":"139","fix":"140"},{"kind":"141","justification":"142"},{"kind":"141","justification":"142"},{"kind":"141","justification":"142"},{"kind":"141","justification":"142"},"removeEscape",{"range":"143","text":"142"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"144","text":"145"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"146","text":"142"},{"range":"147","text":"145"},{"range":"148","text":"142"},{"range":"149","text":"145"},{"range":"150","text":"142"},{"range":"151","text":"145"},{"range":"152","text":"142"},{"range":"153","text":"145"},"Update the dependencies array to be: [id]",{"range":"154","text":"155"},"directive","",[122,123],[122,122],"\\",[145,146],[145,145],[306,307],[306,306],[5720,5721],[5720,5720],[5745,5746],[5745,5745],[593,595],"[id]"]